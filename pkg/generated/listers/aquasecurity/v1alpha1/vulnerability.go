// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/aquasecurity/starboard/pkg/apis/aquasecurity/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VulnerabilityLister helps list Vulnerabilities.
// All objects returned here must be treated as read-only.
type VulnerabilityLister interface {
	// List lists all Vulnerabilities in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error)
	// Vulnerabilities returns an object that can list and get Vulnerabilities.
	Vulnerabilities(namespace string) VulnerabilityNamespaceLister
	VulnerabilityListerExpansion
}

// vulnerabilityLister implements the VulnerabilityLister interface.
type vulnerabilityLister struct {
	indexer cache.Indexer
}

// NewVulnerabilityLister returns a new VulnerabilityLister.
func NewVulnerabilityLister(indexer cache.Indexer) VulnerabilityLister {
	return &vulnerabilityLister{indexer: indexer}
}

// List lists all Vulnerabilities in the indexer.
func (s *vulnerabilityLister) List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VulnerabilityReport))
	})
	return ret, err
}

// Vulnerabilities returns an object that can list and get Vulnerabilities.
func (s *vulnerabilityLister) Vulnerabilities(namespace string) VulnerabilityNamespaceLister {
	return vulnerabilityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VulnerabilityNamespaceLister helps list and get Vulnerabilities.
// All objects returned here must be treated as read-only.
type VulnerabilityNamespaceLister interface {
	// List lists all Vulnerabilities in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error)
	// Get retrieves the VulnerabilityReport from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VulnerabilityReport, error)
	VulnerabilityNamespaceListerExpansion
}

// vulnerabilityNamespaceLister implements the VulnerabilityNamespaceLister
// interface.
type vulnerabilityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Vulnerabilities in the indexer for a given namespace.
func (s vulnerabilityNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VulnerabilityReport))
	})
	return ret, err
}

// Get retrieves the VulnerabilityReport from the indexer for a given namespace and name.
func (s vulnerabilityNamespaceLister) Get(name string) (*v1alpha1.VulnerabilityReport, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vulnerability"), name)
	}
	return obj.(*v1alpha1.VulnerabilityReport), nil
}
